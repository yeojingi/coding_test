import math
import sys
sys.setrecursionlimit(10**6)

[N, M] = list(map(int, input().split(' ')))

m = []
for i in range(0, N):
  m.append( list(map(int, input().split(' '))))

di = [1, 0, -1, 0]
dj = [0, 1, 0, -1]
answer = 0
track = [[0, 0]]
dp = [ [0] * M for _ in range(N)]

def rec(ci, cj):
  global answer, di, dj, m
  
  if (ci == N-1 and cj == M-1):
    answer += 1
    for t in track:
      dp[t[0]][t[1]] += 1
    return

  ch = m[ci][cj]
  flag = True

  for k in range(4):
    ni = ci + di[k]
    nj = cj + dj[k]

    if not (ni >= 0 and ni < N and nj >= 0 and nj < M):
      continue

    if dp[ni][nj] == -1:
      continue

    if ch > m[ni][nj]:
      flag = False
      if dp[ni][nj] > 0:
        h = dp[ni][nj]
        answer += 1
        for t in track:
          dp[t[0]][t[1]] += h
      else:
        track.append([ni, nj])
        rec(ni, nj)
        track.pop()
  if flag:
    dp[ci][cj] = -1

rec(0, 0)

if dp[0][0] == -1:
  dp[0][0] = 0
print(dp[0][0])


# for d in dp:
#   print(d)

# 18 18
# 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19
# 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18
# 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17
# 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16
# 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15
# 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14
# 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13
# 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12
# 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11
# 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10
# 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9
# 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8
# 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7
# 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6
# 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5
# 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4
# 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3
# 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 10000
# 0

# 3 3
# 9 4 3
# 8 5 2
# 7 6 1
# 6

# 3 5
# 55 99 49 48 47
# 54 99 50 99 46
# 53 52 51 99 45
# 1

# 4 4
# 20 19 18 17
# 10 9 8 16
# 100 100 7 15
# 100 100 6 14
# 1